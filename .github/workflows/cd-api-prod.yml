name: CD API PROD

on:
  push:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api_changed: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          base: main
          filters: |
            api:
              - 'api/**'
  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.api_changed == 'true'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Grant execute permission for run-test-mysql-redis.sh
        run: chmod +x run-test-mysql-redis.sh
        working-directory: ./api

      - name: Start MySQL for testing
        run: ./run-test-mysql-redis.sh
        working-directory: ./api

      - name: Build with Gradle
        run: ./gradlew :api:build

      - name: Sign in Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build -f ./Dockerfile --platform linux/arm64 --no-cache -t samhap/kokomen-interview-api:prod .
        working-directory: ./api

      - name: Push the Docker Image to Dockerhub
        run: docker push samhap/kokomen-interview-api:prod
        working-directory: ./api

  deploy:
    needs: build
    runs-on: [ self-hosted, prod ]

    strategy:
      matrix:
        runner: [ prod-a, prod-b ]

    steps:
      - name: Stop existing container
        run: sudo docker rm -f kokomen-interview-api-prod

      - name: Docker Image prune
        run: sudo docker image prune -f -a

      - name: pull docker compose yaml files
        working-directory: /home/ubuntu
        run: |
          [ -d kokomen-backend ] || git clone --filter=blob:none --no-checkout https://github.com/samhap-soft/kokomen-backend.git
          cd kokomen-backend
          git sparse-checkout init --cone
          git fetch origin main
          git checkout main
          git sparse-checkout set docker/prod/api
          git pull origin main

      - name: Docker Image pull
        run: sudo docker pull samhap/kokomen-interview-api:prod

      - name: Docker run
        working-directory: /home/ubuntu
        env:
          SPRING_DATASOURCE_URL_PROD: ${{ secrets.SPRING_DATASOURCE_URL_PROD }}
          SPRING_DATASOURCE_USERNAME_PROD: ${{ secrets.SPRING_DATASOURCE_USERNAME_PROD }}
          SPRING_DATASOURCE_PASSWORD_PROD: ${{ secrets.SPRING_DATASOURCE_PASSWORD_PROD }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          KAKAO_CLIENT_ID_PROD: ${{ secrets.KAKAO_CLIENT_ID_PROD }}
          KAKAO_CLIENT_SECRET_PROD: ${{ secrets.KAKAO_CLIENT_SECRET_PROD }}
          KAKAO_ADMIN_KEY_PROD: ${{ secrets.KAKAO_ADMIN_KEY_PROD }}
          REDIS_PRIMARY_HOST_PROD: ${{ secrets.REDIS_PRIMARY_HOST_PROD }}
          NOTIFICATION_BASE_URL_PROD: ${{ secrets.NOTIFICATION_BASE_URL_PROD }}
          KAFKA_BOOTSTRAP_SERVERS: ${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}
          SUPERTONE_API_TOKEN: ${{ secrets.SUPERTONE_API_TOKEN }}
          GOOGLE_CLIENT_ID_PROD: ${{ secrets.GOOGLE_CLIENT_ID_PROD }}
          GOOGLE_CLIENT_SECRET_PROD: ${{ secrets.GOOGLE_CLIENT_SECRET_PROD }}
          PAYMENT_BASE_URL_PROD: ${{ secrets.PAYMENT_BASE_URL_PROD }}
        run: |
          export HOSTNAME=$(hostname)
          cd kokomen-backend/docker/prod/api
          sudo -E docker compose -f docker-compose-prod.yml up -d
