plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

ext {
    snippetsDir = file("build/generated-snippets")
}

dependencies {
    implementation project(':common')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.retry:spring-retry:2.0.12'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation platform('software.amazon.awssdk:bom:2.31.69')
    implementation 'software.amazon.awssdk:bedrock'
    implementation 'software.amazon.awssdk:bedrockruntime'
    implementation 'software.amazon.awssdk:bedrockagentruntime'
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:apache-client:2.32.12'
    implementation 'software.amazon.awssdk:netty-nio-client:2.32.16'

    implementation 'org.springframework.kafka:spring-kafka'

    testImplementation 'com.h2database:h2:2.2.224'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippetsDir': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}
